### YamlMime:ManagedReference
items:
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel
  commentId: T:KittyCoin.ViewModels.ConnectBlockchainViewModel
  id: ConnectBlockchainViewModel
  parent: KittyCoin.ViewModels
  children:
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.LaunchServerWithPort
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.PropertyChanged
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress
  - KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList
  langs:
  - csharp
  - vb
  name: ConnectBlockchainViewModel
  nameWithType: ConnectBlockchainViewModel
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel
  type: Class
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ConnectBlockchainViewModel
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 10
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: 'public class ConnectBlockchainViewModel : INotifyPropertyChanged'
    content.vb: >-
      Public Class ConnectBlockchainViewModel
          Implements INotifyPropertyChanged
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.INotifyPropertyChanged
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.LaunchServerWithPort
  commentId: F:KittyCoin.ViewModels.ConnectBlockchainViewModel.LaunchServerWithPort
  id: LaunchServerWithPort
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: LaunchServerWithPort
  nameWithType: ConnectBlockchainViewModel.LaunchServerWithPort
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.LaunchServerWithPort
  type: Field
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: LaunchServerWithPort
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 15
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public EventHandler LaunchServerWithPort
    return:
      type: System.EventHandler
    content.vb: Public LaunchServerWithPort As EventHandler
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.#ctor(System.Collections.Generic.IEnumerable{System.String})
  commentId: M:KittyCoin.ViewModels.ConnectBlockchainViewModel.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: ConnectBlockchainViewModel(IEnumerable<String>)
  nameWithType: ConnectBlockchainViewModel.ConnectBlockchainViewModel(IEnumerable<String>)
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectBlockchainViewModel(System.Collections.Generic.IEnumerable<System.String>)
  type: Constructor
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: .ctor
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 17
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public ConnectBlockchainViewModel(IEnumerable<string> serverList)
    parameters:
    - id: serverList
      type: System.Collections.Generic.IEnumerable{System.String}
    content.vb: Public Sub New(serverList As IEnumerable(Of String))
  overload: KittyCoin.ViewModels.ConnectBlockchainViewModel.#ctor*
  nameWithType.vb: ConnectBlockchainViewModel.ConnectBlockchainViewModel(IEnumerable(Of String))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectBlockchainViewModel(System.Collections.Generic.IEnumerable(Of System.String))
  name.vb: ConnectBlockchainViewModel(IEnumerable(Of String))
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand
  commentId: P:KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand
  id: ConnectToBlockchainCommand
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: ConnectToBlockchainCommand
  nameWithType: ConnectBlockchainViewModel.ConnectToBlockchainCommand
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand
  type: Property
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ConnectToBlockchainCommand
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 30
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public ICommand ConnectToBlockchainCommand { get; }
    parameters: []
    return:
      type: System.Windows.Input.ICommand
    content.vb: Public ReadOnly Property ConnectToBlockchainCommand As ICommand
  overload: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod
  commentId: M:KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod
  id: ConnectToBlockchainMethod
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: ConnectToBlockchainMethod()
  nameWithType: ConnectBlockchainViewModel.ConnectToBlockchainMethod()
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod()
  type: Method
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ConnectToBlockchainMethod
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 32
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public void ConnectToBlockchainMethod()
    content.vb: Public Sub ConnectToBlockchainMethod
  overload: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress
  commentId: P:KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress
  id: ServerAddress
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: ServerAddress
  nameWithType: ConnectBlockchainViewModel.ServerAddress
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress
  type: Property
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ServerAddress
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 39
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public string ServerAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ServerAddress As String
  overload: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList
  commentId: P:KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList
  id: ServerList
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: ServerList
  nameWithType: ConnectBlockchainViewModel.ServerList
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList
  type: Property
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ServerList
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 50
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public List<string> ServerList { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{System.String}
    content.vb: Public Property ServerList As List(Of String)
  overload: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.PropertyChanged
  commentId: E:KittyCoin.ViewModels.ConnectBlockchainViewModel.PropertyChanged
  id: PropertyChanged
  parent: KittyCoin.ViewModels.ConnectBlockchainViewModel
  langs:
  - csharp
  - vb
  name: PropertyChanged
  nameWithType: ConnectBlockchainViewModel.PropertyChanged
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.PropertyChanged
  type: Event
  source:
    remote:
      path: KittyCoin/ViewModels/ConnectBlockchainViewModel.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: PropertyChanged
    path: ViewModels/ConnectBlockchainViewModel.cs
    startLine: 65
  assemblies:
  - KittyCoin
  namespace: KittyCoin.ViewModels
  syntax:
    content: public event PropertyChangedEventHandler PropertyChanged
    return:
      type: System.ComponentModel.PropertyChangedEventHandler
    content.vb: Public Event PropertyChanged As PropertyChangedEventHandler
  implements:
  - System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: KittyCoin.ViewModels
  commentId: N:KittyCoin.ViewModels
  name: KittyCoin.ViewModels
  nameWithType: KittyCoin.ViewModels
  fullName: KittyCoin.ViewModels
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.INotifyPropertyChanged
  commentId: T:System.ComponentModel.INotifyPropertyChanged
  parent: System.ComponentModel
  isExternal: true
  name: INotifyPropertyChanged
  nameWithType: INotifyPropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.ComponentModel
  commentId: N:System.ComponentModel
  isExternal: true
  name: System.ComponentModel
  nameWithType: System.ComponentModel
  fullName: System.ComponentModel
- uid: System.EventHandler
  commentId: T:System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.#ctor*
  commentId: Overload:KittyCoin.ViewModels.ConnectBlockchainViewModel.#ctor
  name: ConnectBlockchainViewModel
  nameWithType: ConnectBlockchainViewModel.ConnectBlockchainViewModel
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectBlockchainViewModel
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand*
  commentId: Overload:KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand
  name: ConnectToBlockchainCommand
  nameWithType: ConnectBlockchainViewModel.ConnectToBlockchainCommand
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainCommand
- uid: System.Windows.Input.ICommand
  commentId: T:System.Windows.Input.ICommand
  parent: System.Windows.Input
  isExternal: true
  name: ICommand
  nameWithType: ICommand
  fullName: System.Windows.Input.ICommand
- uid: System.Windows.Input
  commentId: N:System.Windows.Input
  isExternal: true
  name: System.Windows.Input
  nameWithType: System.Windows.Input
  fullName: System.Windows.Input
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod*
  commentId: Overload:KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod
  name: ConnectToBlockchainMethod
  nameWithType: ConnectBlockchainViewModel.ConnectToBlockchainMethod
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ConnectToBlockchainMethod
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress*
  commentId: Overload:KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress
  name: ServerAddress
  nameWithType: ConnectBlockchainViewModel.ServerAddress
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList*
  commentId: Overload:KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList
  name: ServerList
  nameWithType: ConnectBlockchainViewModel.ServerList
  fullName: KittyCoin.ViewModels.ConnectBlockchainViewModel.ServerList
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of System.String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  commentId: E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged
  parent: System.ComponentModel.INotifyPropertyChanged
  isExternal: true
  name: PropertyChanged
  nameWithType: INotifyPropertyChanged.PropertyChanged
  fullName: System.ComponentModel.INotifyPropertyChanged.PropertyChanged
- uid: System.ComponentModel.PropertyChangedEventHandler
  commentId: T:System.ComponentModel.PropertyChangedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: PropertyChangedEventHandler
  nameWithType: PropertyChangedEventHandler
  fullName: System.ComponentModel.PropertyChangedEventHandler
