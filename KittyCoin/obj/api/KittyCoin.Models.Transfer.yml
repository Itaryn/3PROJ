### YamlMime:ManagedReference
items:
- uid: KittyCoin.Models.Transfer
  commentId: T:KittyCoin.Models.Transfer
  id: Transfer
  parent: KittyCoin.Models
  children:
  - KittyCoin.Models.Transfer.#ctor
  - KittyCoin.Models.Transfer.#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double)
  - KittyCoin.Models.Transfer.#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double,System.DateTime)
  - KittyCoin.Models.Transfer.Amount
  - KittyCoin.Models.Transfer.Biscuit
  - KittyCoin.Models.Transfer.CreationDate
  - KittyCoin.Models.Transfer.Equals(System.Object)
  - KittyCoin.Models.Transfer.FromAddress
  - KittyCoin.Models.Transfer.IsValid
  - KittyCoin.Models.Transfer.Signature
  - KittyCoin.Models.Transfer.SignData(KittyCoin.Models.User)
  - KittyCoin.Models.Transfer.ToAddress
  - KittyCoin.Models.Transfer.ToHash
  - KittyCoin.Models.Transfer.ToString
  - KittyCoin.Models.Transfer.VerifyData
  langs:
  - csharp
  - vb
  name: Transfer
  nameWithType: Transfer
  fullName: KittyCoin.Models.Transfer
  type: Class
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: Transfer
    path: Models/Transfer.cs
    startLine: 10
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe transfer class\n"
  example: []
  syntax:
    content: public class Transfer
    content.vb: Public Class Transfer
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: KittyCoin.Models.Transfer.FromAddress
  commentId: P:KittyCoin.Models.Transfer.FromAddress
  id: FromAddress
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: FromAddress
  nameWithType: Transfer.FromAddress
  fullName: KittyCoin.Models.Transfer.FromAddress
  type: Property
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: FromAddress
    path: Models/Transfer.cs
    startLine: 17
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe adress of the sender\n"
  example: []
  syntax:
    content: public string FromAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FromAddress As String
  overload: KittyCoin.Models.Transfer.FromAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.ToAddress
  commentId: P:KittyCoin.Models.Transfer.ToAddress
  id: ToAddress
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: ToAddress
  nameWithType: Transfer.ToAddress
  fullName: KittyCoin.Models.Transfer.ToAddress
  type: Property
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ToAddress
    path: Models/Transfer.cs
    startLine: 22
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe address of the receiver\n"
  example: []
  syntax:
    content: public string ToAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ToAddress As String
  overload: KittyCoin.Models.Transfer.ToAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.Amount
  commentId: P:KittyCoin.Models.Transfer.Amount
  id: Amount
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: Transfer.Amount
  fullName: KittyCoin.Models.Transfer.Amount
  type: Property
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: Amount
    path: Models/Transfer.cs
    startLine: 27
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe amount\n"
  example: []
  syntax:
    content: public double Amount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Amount As Double
  overload: KittyCoin.Models.Transfer.Amount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.Biscuit
  commentId: P:KittyCoin.Models.Transfer.Biscuit
  id: Biscuit
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Biscuit
  nameWithType: Transfer.Biscuit
  fullName: KittyCoin.Models.Transfer.Biscuit
  type: Property
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: Biscuit
    path: Models/Transfer.cs
    startLine: 32
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe amount for miner\n"
  example: []
  syntax:
    content: public double Biscuit { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Biscuit As Double
  overload: KittyCoin.Models.Transfer.Biscuit*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.CreationDate
  commentId: P:KittyCoin.Models.Transfer.CreationDate
  id: CreationDate
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: CreationDate
  nameWithType: Transfer.CreationDate
  fullName: KittyCoin.Models.Transfer.CreationDate
  type: Property
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: CreationDate
    path: Models/Transfer.cs
    startLine: 37
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe creation date of the transfer\n"
  example: []
  syntax:
    content: public DateTime CreationDate { get; set; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public Property CreationDate As Date
  overload: KittyCoin.Models.Transfer.CreationDate*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.Signature
  commentId: P:KittyCoin.Models.Transfer.Signature
  id: Signature
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Signature
  nameWithType: Transfer.Signature
  fullName: KittyCoin.Models.Transfer.Signature
  type: Property
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: Signature
    path: Models/Transfer.cs
    startLine: 42
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe signature to proove the transfer\n"
  example: []
  syntax:
    content: public string Signature { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Signature As String
  overload: KittyCoin.Models.Transfer.Signature*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.#ctor
  commentId: M:KittyCoin.Models.Transfer.#ctor
  id: '#ctor'
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Transfer()
  nameWithType: Transfer.Transfer()
  fullName: KittyCoin.Models.Transfer.Transfer()
  type: Constructor
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: .ctor
    path: Models/Transfer.cs
    startLine: 51
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nEmpty constructor to deserialize with NewtonSoft\n"
  example: []
  syntax:
    content: public Transfer()
    content.vb: Public Sub New
  overload: KittyCoin.Models.Transfer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double,System.DateTime)
  commentId: M:KittyCoin.Models.Transfer.#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double,System.DateTime)
  id: '#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double,System.DateTime)'
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Transfer(User, String, Double, Double, DateTime)
  nameWithType: Transfer.Transfer(User, String, Double, Double, DateTime)
  fullName: KittyCoin.Models.Transfer.Transfer(KittyCoin.Models.User, System.String, System.Double, System.Double, System.DateTime)
  type: Constructor
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: .ctor
    path: Models/Transfer.cs
    startLine: 61
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nConstructor to copy a transfer already create\n"
  example: []
  syntax:
    content: public Transfer(User fromUser, string toAddress, double amount, double biscuit, DateTime creationDate)
    parameters:
    - id: fromUser
      type: KittyCoin.Models.User
      description: ''
    - id: toAddress
      type: System.String
      description: ''
    - id: amount
      type: System.Double
      description: ''
    - id: biscuit
      type: System.Double
      description: ''
    - id: creationDate
      type: System.DateTime
      description: ''
    content.vb: Public Sub New(fromUser As User, toAddress As String, amount As Double, biscuit As Double, creationDate As Date)
  overload: KittyCoin.Models.Transfer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double)
  commentId: M:KittyCoin.Models.Transfer.#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double)
  id: '#ctor(KittyCoin.Models.User,System.String,System.Double,System.Double)'
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Transfer(User, String, Double, Double)
  nameWithType: Transfer.Transfer(User, String, Double, Double)
  fullName: KittyCoin.Models.Transfer.Transfer(KittyCoin.Models.User, System.String, System.Double, System.Double)
  type: Constructor
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: .ctor
    path: Models/Transfer.cs
    startLine: 78
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nConstructor to create a new transfer\n"
  example: []
  syntax:
    content: public Transfer(User fromUser, string toAddress, double amount, double biscuit)
    parameters:
    - id: fromUser
      type: KittyCoin.Models.User
      description: ''
    - id: toAddress
      type: System.String
      description: ''
    - id: amount
      type: System.Double
      description: ''
    - id: biscuit
      type: System.Double
      description: ''
    content.vb: Public Sub New(fromUser As User, toAddress As String, amount As Double, biscuit As Double)
  overload: KittyCoin.Models.Transfer.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.IsValid
  commentId: M:KittyCoin.Models.Transfer.IsValid
  id: IsValid
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: IsValid()
  nameWithType: Transfer.IsValid()
  fullName: KittyCoin.Models.Transfer.IsValid()
  type: Method
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: IsValid
    path: Models/Transfer.cs
    startLine: 96
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nCheck the validity of the transfer\n"
  example: []
  syntax:
    content: public bool IsValid()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsValid As Boolean
  overload: KittyCoin.Models.Transfer.IsValid*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.ToHash
  commentId: M:KittyCoin.Models.Transfer.ToHash
  id: ToHash
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: ToHash()
  nameWithType: Transfer.ToHash()
  fullName: KittyCoin.Models.Transfer.ToHash()
  type: Method
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ToHash
    path: Models/Transfer.cs
    startLine: 106
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nCalculate the Hash of the transfer\n"
  example: []
  syntax:
    content: public string ToHash()
    return:
      type: System.String
      description: ''
    content.vb: Public Function ToHash As String
  overload: KittyCoin.Models.Transfer.ToHash*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.SignData(KittyCoin.Models.User)
  commentId: M:KittyCoin.Models.Transfer.SignData(KittyCoin.Models.User)
  id: SignData(KittyCoin.Models.User)
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: SignData(User)
  nameWithType: Transfer.SignData(User)
  fullName: KittyCoin.Models.Transfer.SignData(KittyCoin.Models.User)
  type: Method
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: SignData
    path: Models/Transfer.cs
    startLine: 120
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nSign the data with the user information\n"
  example: []
  syntax:
    content: public void SignData(User user)
    parameters:
    - id: user
      type: KittyCoin.Models.User
      description: ''
    content.vb: Public Sub SignData(user As User)
  overload: KittyCoin.Models.Transfer.SignData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.VerifyData
  commentId: M:KittyCoin.Models.Transfer.VerifyData
  id: VerifyData
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: VerifyData()
  nameWithType: Transfer.VerifyData()
  fullName: KittyCoin.Models.Transfer.VerifyData()
  type: Method
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: VerifyData
    path: Models/Transfer.cs
    startLine: 129
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nVerify the signature of the transfer\n"
  example: []
  syntax:
    content: public bool VerifyData()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function VerifyData As Boolean
  overload: KittyCoin.Models.Transfer.VerifyData*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: KittyCoin.Models.Transfer.Equals(System.Object)
  commentId: M:KittyCoin.Models.Transfer.Equals(System.Object)
  id: Equals(System.Object)
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: Equals(Object)
  nameWithType: Transfer.Equals(Object)
  fullName: KittyCoin.Models.Transfer.Equals(System.Object)
  type: Method
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: Equals
    path: Models/Transfer.cs
    startLine: 164
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nCompare 2 transfer\n"
  example: []
  syntax:
    content: public override bool Equals(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.Object.Equals(System.Object)
  overload: KittyCoin.Models.Transfer.Equals*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
- uid: KittyCoin.Models.Transfer.ToString
  commentId: M:KittyCoin.Models.Transfer.ToString
  id: ToString
  parent: KittyCoin.Models.Transfer
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Transfer.ToString()
  fullName: KittyCoin.Models.Transfer.ToString()
  type: Method
  source:
    remote:
      path: KittyCoin/Models/Transfer.cs
      branch: master
      repo: https://gitlab.com/Itaryn/kittycoins.git
    id: ToString
    path: Models/Transfer.cs
    startLine: 181
  assemblies:
  - KittyCoin
  namespace: KittyCoin.Models
  summary: "\nThe ToString() Method\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: KittyCoin.Models.Transfer.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: KittyCoin.Models
  commentId: N:KittyCoin.Models
  name: KittyCoin.Models
  nameWithType: KittyCoin.Models
  fullName: KittyCoin.Models
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: KittyCoin.Models.Transfer.FromAddress*
  commentId: Overload:KittyCoin.Models.Transfer.FromAddress
  name: FromAddress
  nameWithType: Transfer.FromAddress
  fullName: KittyCoin.Models.Transfer.FromAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: KittyCoin.Models.Transfer.ToAddress*
  commentId: Overload:KittyCoin.Models.Transfer.ToAddress
  name: ToAddress
  nameWithType: Transfer.ToAddress
  fullName: KittyCoin.Models.Transfer.ToAddress
- uid: KittyCoin.Models.Transfer.Amount*
  commentId: Overload:KittyCoin.Models.Transfer.Amount
  name: Amount
  nameWithType: Transfer.Amount
  fullName: KittyCoin.Models.Transfer.Amount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: KittyCoin.Models.Transfer.Biscuit*
  commentId: Overload:KittyCoin.Models.Transfer.Biscuit
  name: Biscuit
  nameWithType: Transfer.Biscuit
  fullName: KittyCoin.Models.Transfer.Biscuit
- uid: KittyCoin.Models.Transfer.CreationDate*
  commentId: Overload:KittyCoin.Models.Transfer.CreationDate
  name: CreationDate
  nameWithType: Transfer.CreationDate
  fullName: KittyCoin.Models.Transfer.CreationDate
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: KittyCoin.Models.Transfer.Signature*
  commentId: Overload:KittyCoin.Models.Transfer.Signature
  name: Signature
  nameWithType: Transfer.Signature
  fullName: KittyCoin.Models.Transfer.Signature
- uid: KittyCoin.Models.Transfer.#ctor*
  commentId: Overload:KittyCoin.Models.Transfer.#ctor
  name: Transfer
  nameWithType: Transfer.Transfer
  fullName: KittyCoin.Models.Transfer.Transfer
- uid: KittyCoin.Models.User
  commentId: T:KittyCoin.Models.User
  parent: KittyCoin.Models
  name: User
  nameWithType: User
  fullName: KittyCoin.Models.User
- uid: KittyCoin.Models.Transfer.IsValid*
  commentId: Overload:KittyCoin.Models.Transfer.IsValid
  name: IsValid
  nameWithType: Transfer.IsValid
  fullName: KittyCoin.Models.Transfer.IsValid
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: KittyCoin.Models.Transfer.ToHash*
  commentId: Overload:KittyCoin.Models.Transfer.ToHash
  name: ToHash
  nameWithType: Transfer.ToHash
  fullName: KittyCoin.Models.Transfer.ToHash
- uid: KittyCoin.Models.Transfer.SignData*
  commentId: Overload:KittyCoin.Models.Transfer.SignData
  name: SignData
  nameWithType: Transfer.SignData
  fullName: KittyCoin.Models.Transfer.SignData
- uid: KittyCoin.Models.Transfer.VerifyData*
  commentId: Overload:KittyCoin.Models.Transfer.VerifyData
  name: VerifyData
  nameWithType: Transfer.VerifyData
  fullName: KittyCoin.Models.Transfer.VerifyData
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: KittyCoin.Models.Transfer.Equals*
  commentId: Overload:KittyCoin.Models.Transfer.Equals
  name: Equals
  nameWithType: Transfer.Equals
  fullName: KittyCoin.Models.Transfer.Equals
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: KittyCoin.Models.Transfer.ToString*
  commentId: Overload:KittyCoin.Models.Transfer.ToString
  name: ToString
  nameWithType: Transfer.ToString
  fullName: KittyCoin.Models.Transfer.ToString
